from django.core.management.base import BaseCommand
from django.db import transaction
from rfq.utils import create_default_currencies
from rfq.models import Currency


class Command(BaseCommand):
    help = '–°–æ–∑–¥–∞–µ—Ç –≤–∞–ª—é—Ç—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: –¥–æ–ª–ª–∞—Ä, —é–∞–Ω—å, —Ä—É–±–ª—å'

    def add_arguments(self, parser):
        parser.add_argument(
            '--recreate',
            action='store_true',
            help='–ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –≤—Å–µ –≤–∞–ª—é—Ç—ã (—É–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ)',
        )

    def handle(self, *args, **options):
        self.stdout.write(
            self.style.SUCCESS('ü™ô –ù–∞—á–∏–Ω–∞—é —Å–æ–∑–¥–∞–Ω–∏–µ –≤–∞–ª—é—Ç...')
        )

        try:
            with transaction.atomic():
                if options['recreate']:
                    self.stdout.write('‚ö†Ô∏è  –£–¥–∞–ª—è—é —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –≤–∞–ª—é—Ç—ã...')
                    Currency.objects.all().delete()

                # –°–æ–∑–¥–∞–µ–º –≤–∞–ª—é—Ç—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                create_default_currencies()
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                currencies = Currency.objects.filter(is_active=True)
                self.stdout.write(
                    self.style.SUCCESS(f'‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ {currencies.count()} –≤–∞–ª—é—Ç:')
                )
                
                for currency in currencies:
                    self.stdout.write(
                        f'   ‚Ä¢ {currency.code} - {currency.name} ({currency.symbol})'
                    )

        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–∞–ª—é—Ç: {e}')
            )
            raise

        self.stdout.write(
            self.style.SUCCESS('üéâ –í–∞–ª—é—Ç—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!')
        ) 