#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API endpoints
"""
import requests
import json

BASE_URL = "http://localhost:8000/api/v1"

def test_endpoint(endpoint, description):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–¥–Ω–æ–≥–æ endpoint'–∞"""
    print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ {description}")
    print(f"URL: {BASE_URL}{endpoint}")
    
    try:
        response = requests.get(f"{BASE_URL}{endpoint}")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ!")
            if isinstance(data, dict) and 'results' in data:
                print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: {len(data['results'])}")
                if data['results']:
                    print(f"–ü–µ—Ä–≤–∞—è –∑–∞–ø–∏—Å—å: {json.dumps(data['results'][0], indent=2, ensure_ascii=False)}")
            else:
                print(f"–î–∞–Ω–Ω—ã–µ: {json.dumps(data[:2] if isinstance(data, list) else data, indent=2, ensure_ascii=False)}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞!")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")

def main():
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints –¥–ª—è email-marketing")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ —Ç—Ä–∏ endpoint'–∞
    test_endpoint("/person/persons/?status=active", "–ü–æ–ª—É—á–∞—Ç–µ–ª–∏ (Person)")
    test_endpoint("/users/?role=sales", "–ú–µ–Ω–µ–¥–∂–µ—Ä—ã –ø—Ä–æ–¥–∞–∂ (Users)")
    test_endpoint("/goods/products/", "–¢–æ–≤–∞—Ä—ã (Products)")
    
    print("\n" + "="*50)
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main()