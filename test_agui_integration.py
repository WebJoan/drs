#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è AG-UI –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
"""

import os
import sys
import requests
import json
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BACKEND_URL = "http://localhost:8000"
AGUI_HEALTH_URL = f"{BACKEND_URL}/api/agui/health/"
AGUI_API_URL = f"{BACKEND_URL}/api/agui/"

def test_health_endpoint():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç health endpoint"""
    print("üè• –¢–µ—Å—Ç–∏—Ä—É–µ–º health endpoint...")
    
    try:
        response = requests.get(AGUI_HEALTH_URL, timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ Health endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"   Status: {data.get('status', 'unknown')}")
            print(f"   AG-UI available: {data.get('agui_available', False)}")
            return data.get('agui_available', False)
        else:
            print(f"‚ùå Health endpoint –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ health endpoint: {e}")
        return False

def test_agent_info():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≥–µ–Ω—Ç–µ"""
    print("\nü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≥–µ–Ω—Ç–µ...")
    
    try:
        response = requests.get(AGUI_API_URL, timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≥–µ–Ω—Ç–µ –ø–æ–ª—É—á–µ–Ω–∞")
            print(f"   Agent ID: {data.get('agent_id', 'unknown')}")
            print(f"   Name: {data.get('name', 'unknown')}")
            print(f"   Status: {data.get('status', 'unknown')}")
            return True
        else:
            print(f"‚ùå API endpoint –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API endpoint: {e}")
        return False

def test_chat_message():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –∞–≥–µ–Ω—Ç—É"""
    print("\nüí¨ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è...")
    
    test_message = "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ AG-UI –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏."
    
    payload = {
        "message": test_message,
        "conversation_id": f"test_conv_{datetime.now().isoformat()}"
    }
    
    try:
        response = requests.post(
            AGUI_API_URL,
            json=payload,
            headers={"Content-Type": "application/json"},
            timeout=30
        )
        
        if response.status_code == 200:
            data = response.json()
            if data.get('success'):
                print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
                print(f"   –û—Ç–≤–µ—Ç –∞–≥–µ–Ω—Ç–∞: {data.get('response', '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞')[:100]}...")
                return True
            else:
                print(f"‚ùå –ê–≥–µ–Ω—Ç –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: {data.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                return False
        else:
            print(f"‚ùå Chat endpoint –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            try:
                error_data = response.json()
                print(f"   –û—à–∏–±–∫–∞: {error_data.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            except:
                print(f"   –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: {response.text[:200]}...")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")
        return False

def check_environment():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    
    openrouter_key = os.getenv("OPENROUTER_API_KEY")
    if openrouter_key:
        print(f"‚úÖ OPENROUTER_API_KEY –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–¥–ª–∏–Ω–∞: {len(openrouter_key)} —Å–∏–º–≤–æ–ª–æ–≤)")
        return True
    else:
        print("‚ùå OPENROUTER_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–ª—é—á: export OPENROUTER_API_KEY='your_key_here'")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ AG-UI Integration Test Suite")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env_ok = check_environment()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º endpoints
    health_ok = test_health_endpoint()
    info_ok = test_agent_info()
    
    if health_ok and env_ok:
        chat_ok = test_chat_message()
    else:
        print("\n‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç —á–∞—Ç–∞ –∏–∑-–∑–∞ –æ—à–∏–±–æ–∫ –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ç–µ—Å—Ç–∞—Ö")
        chat_ok = False
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n" + "=" * 50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"   –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: {'‚úÖ' if env_ok else '‚ùå'}")
    print(f"   Health endpoint: {'‚úÖ' if health_ok else '‚ùå'}")
    print(f"   Agent info endpoint: {'‚úÖ' if info_ok else '‚ùå'}")
    print(f"   Chat functionality: {'‚úÖ' if chat_ok else '‚ùå'}")
    
    if all([env_ok, health_ok, info_ok, chat_ok]):
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ! AG-UI –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        return 0
    else:
        print("\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ –∑–∞–ø—É—â–µ–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã.")
        return 1

if __name__ == "__main__":
    sys.exit(main())