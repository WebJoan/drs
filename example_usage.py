#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–∏—Å–µ–º —Å Agno

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
–¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–∏—Å–µ–º —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø—Ä–æ–¥–∞–∂–∞—Ö.
"""

import os
import django
from django.conf import settings

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django (–µ—Å–ª–∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ)
if not settings.configured:
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django_react_starter.settings.development')
    django.setup()

from email_marketing.tasks import (
    generate_sales_insights_task,
    generate_personalized_ai_email_task
)
from customer.models import Company
from person.models import Person
from user.models import User


def example_generate_sales_insights():
    """
    –ü—Ä–∏–º–µ—Ä –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–Ω—Å–∞–π—Ç–æ–≤ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º –∫–æ–º–ø–∞–Ω–∏–∏
    """
    print("=== –ü—Ä–∏–º–µ—Ä 1: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω—Å–∞–π—Ç–æ–≤ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º ===")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—É—é –∞–∫—Ç–∏–≤–Ω—É—é –∫–æ–º–ø–∞–Ω–∏—é –∏ –ø–µ—Ä—Å–æ–Ω—É
    try:
        company = Company.objects.filter(status='active').first()
        person = Person.objects.filter(company=company, status='active').first()
        
        if not company or not person:
            print("–û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è –∏–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞")
            return
        
        print(f"–ö–æ–º–ø–∞–Ω–∏—è: {company.name}")
        print(f"–ü–µ—Ä—Å–æ–Ω–∞: {person.get_full_name()} ({person.position})")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–Ω—Å–∞–π—Ç–æ–≤
        result = generate_sales_insights_task.delay(
            company_id=company.id,
            person_id=person.id
        )
        
        print(f"–ó–∞–¥–∞—á–∞ –∑–∞–ø—É—â–µ–Ω–∞ —Å ID: {result.id}")
        print("–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ API endpoint task_status")
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–Ω—Å–∞–π—Ç–æ–≤: {str(e)}")


def example_generate_personalized_email():
    """
    –ü—Ä–∏–º–µ—Ä –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–∏—Å—å–º–∞
    """
    print("\n=== –ü—Ä–∏–º–µ—Ä 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–∏—Å—å–º–∞ ===")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º sales –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏ –ø–µ—Ä—Å–æ–Ω—É –¥–ª—è –ø–∏—Å—å–º–∞
        sales_manager = User.objects.filter(role='sales').first()
        person = Person.objects.filter(status='active').first()
        
        if not sales_manager or not person:
            print("–û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω sales –º–µ–Ω–µ–¥–∂–µ—Ä –∏–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞")
            return
        
        print(f"Sales Manager: {sales_manager.get_full_name()}")
        print(f"–ü–æ–ª—É—á–∞—Ç–µ–ª—å: {person.get_full_name()} ({person.company.name})")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–∏—Å—å–º–∞
        result = generate_personalized_ai_email_task.delay(
            user_id=sales_manager.id,
            recipient_id=person.id,
            context="–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ä–µ—à–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ –≤–∞—à–∏—Ö –ø–æ–∫—É–ø–æ–∫",
            tone="professional",
            purpose="offer",
            products=[],  # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å ID —Ç–æ–≤–∞—Ä–æ–≤
            include_sales_data=True  # –í–∫–ª—é—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–¥–∞–∂–∞—Ö
        )
        
        print(f"–ó–∞–¥–∞—á–∞ –∑–∞–ø—É—â–µ–Ω–∞ —Å ID: {result.id}")
        print("–ü–∏—Å—å–º–æ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–æ —Å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–µ–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–¥–∞–∂–∞—Ö")
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–∏—Å—å–º–∞: {str(e)}")


def example_api_calls():
    """
    –ü—Ä–∏–º–µ—Ä—ã API –≤—ã–∑–æ–≤–æ–≤ —á–µ—Ä–µ–∑ curl
    """
    print("\n=== –ü—Ä–∏–º–µ—Ä 3: API –≤—ã–∑–æ–≤—ã ===")
    
    print("1. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω—Å–∞–π—Ç–æ–≤ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º:")
    print("""
curl -X POST http://localhost:8000/api/v1/email_marketing/emails/generate_sales_insights/ \\
  -H "Authorization: Bearer YOUR_TOKEN" \\
  -H "Content-Type: application/json" \\
  -d '{
    "company_id": 1,
    "person_id": 1
  }'
""")
    
    print("2. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–∏—Å—å–º–∞:")
    print("""
curl -X POST http://localhost:8000/api/v1/email_marketing/emails/generate_personalized/ \\
  -H "Authorization: Bearer YOUR_TOKEN" \\
  -H "Content-Type: application/json" \\
  -d '{
    "recipient_id": 1,
    "context": "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Ä–µ—à–µ–Ω–∏–π –¥–ª—è –≤–∞—à–µ–π –æ—Ç—Ä–∞—Å–ª–∏",
    "tone": "professional",
    "purpose": "offer",
    "products": [1, 2, 3],
    "include_sales_data": true
  }'
""")
    
    print("3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á–∏:")
    print("""
curl -X GET "http://localhost:8000/api/v1/email_marketing/emails/task_status/?task_id=TASK_ID_HERE" \\
  -H "Authorization: Bearer YOUR_TOKEN"
""")


def example_best_practices():
    """
    –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã
    """
    print("\n=== –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ ===")
    
    practices = [
        "1. –í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –Ω–∞–ª–∏—á–∏–µ OPENROUTER_API_KEY –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è",
        "2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ include_sales_data=True –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏",
        "3. –ê–¥–∞–ø—Ç–∏—Ä—É–π—Ç–µ —Ç–æ–Ω –ø–∏—Å—å–º–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—è:",
        "   ‚Ä¢ 'formal' –¥–ª—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π –≤—ã—Å—à–µ–≥–æ –∑–≤–µ–Ω–∞",
        "   ‚Ä¢ 'professional' –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ —Å—Ä–µ–¥–Ω–µ–≥–æ –∑–≤–µ–Ω–∞", 
        "   ‚Ä¢ 'friendly' –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –∏ –º–ª–∞–¥—à–∏—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤",
        "4. –£–∫–∞–∑—ã–≤–∞–π—Ç–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –≤ –ø–æ–ª–µ 'products' –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
        "5. –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á —á–µ—Ä–µ–∑ API endpoint task_status",
        "6. –õ–æ–≥–∏—Ä—É–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–∏—Å–µ–º",
        "7. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–∂–¥—É –æ–±—ã—á–Ω–æ–π –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π"
    ]
    
    for practice in practices:
        print(practice)


def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–µ–π –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤
    """
    print("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–∏—Å–µ–º —Å Agno")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    if not os.getenv('OPENROUTER_API_KEY'):
        print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: OPENROUTER_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å OpenRouter API")
        print("export OPENROUTER_API_KEY='your_api_key_here'")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
    example_generate_sales_insights()
    example_generate_personalized_email()
    example_api_calls()
    example_best_practices()
    
    print("\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("–ò–∑—É—á–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –≤ Celery –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")


if __name__ == "__main__":
    main()